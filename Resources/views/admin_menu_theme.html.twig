{% extends 'knp_menu_base.html.twig' %}

{% macro attributes(attributes) %}
	{%- for name, value in attributes -%}
		{%- if value is not none and value is not same as (false) -%}
			{{- ' %s="%s"'|format(name, value is same as (true) ? name|e : value|e)|raw -}}
		{%- endif -%}
	{%- endfor -%}
{% endmacro %}

{% from _self import attributes as attributes %}

{% block compressed_root %}
	{% spaceless %}
		{{ block('root') }}
	{% endspaceless %}
{% endblock %}

{% block root %}
	{#
			Twitter Bootstrap uses the CSS class "active" to indicate
			the current item, so lets change that.
	#}
	{% set options = options|merge({'currentDepth': 0}) %}
	{% if options.style is defined and options.currentClass is defined and options.currentClass == 'current' %}
		{% set options = options|merge({'currentClass': 'active'}) %}
		{% set options = options|merge({'ancestorClass': 'active'}) %}
	{% endif %}
	{% set listAttributes = item.childrenAttributes %}
	{{ block('list') -}}
{% endblock %}

{% block list %}
	{% if item.hasChildren and options.depth is not same as (0) and item.displayChildren %}
		{% set listAttributes = listAttributes|merge({'class': listAttributes.class|default('')|trim}) %}

		{% set listClass = '' %}
		{% if options.style is defined %}
			{% if options.style == 'tabs' %}
				{% set listClass = 'nav nav-tabs' %}
			{% elseif options.style == 'stacked-tabs' %}
				{% set listClass = 'nav nav-tabs nav-stacked' %}
			{% elseif options.style == 'justified-tabs' %}
				{% set listClass = 'nav nav-tabs nav-justified' %}
			{% elseif options.style == 'pills' %}
				{% set listClass = 'nav nav-pills' %}
			{% elseif options.style == 'justified-pills' %}
				{% set listClass = 'nav nav-pills nav-justified' %}
			{% elseif options.style == 'stacked-pills' %}
				{% set listClass = 'nav nav-pills nav-stacked' %}
			{% elseif options.style == 'list' %}
				{% set listClass = 'nav nav-list' %}
			{% elseif options.style == 'navbar' %}
				{% set listClass = 'nav navbar-nav' %}
			{% elseif options.style == 'navbar-right' %}
				{% set listClass = 'nav navbar-nav navbar-right' %}
			{% elseif options.style == 'sidebar' %}
				{% if options.currentDepth is same as (0) %}
					{% set listClass = 'sidebar-menu tree' %}
				{% else %}
					{% set listClass = 'treeview-menu' %}
				{% endif %}
			{% endif %}
		{% endif %}

		{% if options.pull is defined and options.pull == 'right' %}
			{% set listClass = (listClass|default('') ~ ' pull-right')|trim %}
		{% elseif options.pull is defined and options.pull == 'left' %}
			{% set listClass = (listClass|default('') ~ 'pull-left')|trim %}
		{% endif %}

		{% set listAttributes = listAttributes|merge({'class': (listAttributes.class|default('') ~ ' ' ~ listClass)|trim}) %}

		<ul{{ attributes(listAttributes) }}>
			{{ block('children') }}
		</ul>
	{% endif %}
{% endblock %}

{% block dropdownList %}
	{% spaceless %}
		{% if item.hasChildren and options.depth is not same as (0) and ((item.extras.dropdown is not defined and item.displayChildren is same as (true) or item.extras.dropdown is defined and item.extras.dropdown is same as (true) and item.displayChildren is same as (true))) %}
			{% set listAttributes = listAttributes|merge({'class': (listAttributes.class|default('') ~ ' dropdown-menu')|trim}) %}
			<ul{{ attributes(listAttributes) }}>
				{{ block('children') }}
			</ul>
		{% endif %}
	{% endspaceless %}
{% endblock dropdownList %}

{% block listList %}
	{% spaceless %}
		{% if item.hasChildren and options.depth is not same as (0) and item.displayChildren %}
			<ul{{ attributes(listAttributes) }}>
				{{ block('children') }}
			</ul>
		{% endif %}
	{% endspaceless %}
{% endblock listList %}

{% block children %}
	{# save current variables #}
	{% set currentOptions = options %}
	{% set currentItem = item %}
	{# update the depth for children #}
	{% if options.depth is not none %}
		{% set options = currentOptions|merge({'depth': currentOptions.depth - 1}) %}
	{% endif %}
	{% set options = options|merge({'currentDepth': options.currentDepth + 1}) %}
	{% for item in currentItem.children %}
		{{ block('item') }}
	{% endfor %}
	{# restore current variables #}
	{% set item = currentItem %}
	{% set options = currentOptions %}
{% endblock %}

{% block item %}
	{% if item.displayed %}
		{# building the class of the item #}
		{%- set classes = item.attribute('class') is not empty ? [item.attribute('class')] : [] %}
		{%- if (matcher is defined and matcher.isCurrent(item)) or (item.current is defined and item.current) %}
			{%- set classes = classes|merge([options.currentClass]) %}
		{%- elseif (matcher is defined and matcher.isAncestor(item, options.depth)) or (item.currentAncestor is defined and item.currentAncestor) %}
			{%- set classes = classes|merge([options.ancestorClass]) %}
		{%- endif %}
		{%- if item.actsLikeFirst %}
			{%- set classes = classes|merge([options.firstClass]) %}
		{%- endif %}
		{%- if item.actsLikeLast %}
			{%- set classes = classes|merge([options.lastClass]) %}
		{%- endif %}
		{%- if item.hasChildren and ((options.style is defined and options.style == 'list') or options.currentDepth is not same as (1)) %}
			{%- set classes = classes|merge(['nav-header']) %}
		{%- elseif item.hasChildren and options.style is defined and options.style in ['tabs', 'justified-tabs', 'pills', 'justified-pills', 'navbar', 'navbar-right', 'navbar_justified'] and ((item.extras.dropdown is not defined and item.displayChildren is same as (true) or item.extras.dropdown is defined and item.extras.dropdown is same as (true) and item.displayChildren is same as (true))) %}
			{%- set classes = classes|merge(['dropdown']) %}
		{%- endif %}

		{%- set attributes = item.attributes %}

		{%- if options.style is defined and options.style == 'navbar' and attributes.divider is defined and attributes.divider is not empty and options.currentDepth is same as (1) %}
			{%- set classes = classes|merge(['divider-vertical']) %}
		{%- elseif attributes.divider is defined and attributes.divider is not empty %}
			{%- set classes = classes|merge(['divider']) %}
		{%- endif %}

		{%- if options.style is defined and options.style == 'sidebar' %}
			{%- set classes = classes|merge(['treeview']) %}
		{%- endif %}

		{%- if classes is not empty %}
			{%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
		{%- endif %}
		{# displaying the item #}
		<li{{ attributes(attributes) }}>
			{# advanced logics #}
			{%- if attributes.divider is defined and attributes.divider is not empty %}
				{{ block('dividerElement') }}
			{%- elseif
				item.hasChildren
				and (options.style is defined and options.style in ['tabs', 'justified-tabs', 'pills', 'justified-pills', 'navbar', 'navbar-right', 'navbar_justified', 'sidebar'])
				and (options.currentDepth is same as (1))
				and (item.displayChildren is same as (true) and (item.extras.dropdown is not defined or item.extras.dropdown is same as (true)) )
			%}
				{{ block('dropdownElement') }}
			{%- elseif
				item.hasChildren
				and options.style is defined and options.style in ['tabs', 'justified-tabs', 'pills', 'justified-pills', 'navbar', 'navbar-right', '.', 'sidebar']
				and options.currentDepth is same as (1)
				and ((item.extras.dropdown is defined and item.extras.dropdown is same as (false)) or item.displayChildren is same as (false) )
			%}
				{{ block('linkElement') }}
			{%- elseif item.uri is not empty and ((item.current is defined and not item.current) or options.currentAsLink) %}
				{{ block('linkElement') }}
			{# inherited logics #}
			{%- elseif item.uri is not empty and ((matcher is defined and not matcher.isCurrent(item)) or options.currentAsLink) %}
				{{ block('linkElement') }}
			{%- else %}
				{{ block('spanElement') }}
			{%- endif %}

			{# render the list of children#}
			{%- set childrenClasses = item.childrenAttribute('class') is not empty ? [item.childrenAttribute('class')] : [] %}
			{%- set childrenClasses = childrenClasses|merge(['menu_level_' ~ item.level]) %}
			{%- set listAttributes = item.childrenAttributes|merge({'class': childrenClasses|join(' ') }) %}
			{%- if item.hasChildren and options.style is defined and (options.style == 'list' or options.currentDepth is not same as (1)) %}
				{{ block('listList') }}
			{%- elseif item.hasChildren and options.style is defined and options.style in ['tabs', 'justified-tabs', 'pills', 'justified-pills', 'navbar', 'navbar-right', 'navbar_justified'] %}
				{{ block('dropdownList') }}
			{%- else %}
				{{ block('list') }}
			{%- endif %}
		</li>
	{% endif %}
{% endblock item %}

{% block linkElement %}
	<a href="{{ item.uri }}"{{ attributes(item.linkAttributes) }}>{{ block('label') }}</a>
{% endblock %}

{% block dropdownElement %}
	{% set labelAttributes = item.labelAttributes %}
	{% set labelAttributes = labelAttributes|merge({'class': (labelAttributes.class|default('') ~ ' dropdown-toggle')|trim}) %}
	{% set labelAttributes = labelAttributes|merge({'data-toggle': 'dropdown'}) %}
	<a href="#"{{ attributes(labelAttributes) }}>{{ block('label') }}
		{% if options.style is defined and options.style == 'sidebar' %}
			<span class="pull-right-container">
				{% if item.extras.stickers is defined %}
					{% for sticker in item.extras.stickers %}
						<small class="label pull-right bg-{{ sticker.color }}">{{ sticker.text }}</small>
					{% endfor %}
				{% else %}
					<i class="fa fa-angle-left pull-right"></i>
				{% endif %}
      </span>
		{% else %}
			<b class="caret"></b>
		{% endif %}
	</a>
{% endblock dropdownElement %}

{% block dividerElement %}
	{% spaceless %}
		<li class="divider"></li>
	{% endspaceless %}
{% endblock dividerElement %}

{% block spanElement %}<span{{ attributes(item.labelAttributes) }}>{{ block('label') }}</span>{% endblock %}

{% block label %}
		{%- if item.getExtra('icon', false) %}<i class="fa fa-{{ item.getExtra('icon') }}"></i> {% endif -%}
		{%- set translation_domain = item.extra('translation_domain', 'messages') -%}
		{%- set label = item.label -%}
		{%- if translation_domain is not same as(false) -%}
	    {%- set label = label|trans(item.extra('translation_params', {}), translation_domain) -%}
		{%- endif -%}
		{%- if options.allow_safe_labels and item.extra('safe_label', false) -%}
			{%- set label = label|raw|parse_icons -%}
		{%- else %}
			{%- set label = label|parse_icons -%}
		{%- endif -%}
		{%- if options.style is defined and options.style == 'sidebar' -%}
			<span>{{ label }}</span>
		{%- else -%}
			{{- label -}}
		{%- endif %}
{% endblock label %}